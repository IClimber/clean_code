version: "3.9"
volumes:
  db-store:
  psysh-store:
services:
  app:
    container_name: test-project-php
    build:
      args:
        user: www-data
        uid: 1000
      context: .
      dockerfile: ./docker/php/Dockerfile
      target: ${APP_BUILD_TARGET:-development}
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - type: bind
        source: .
        target: /var/www/html
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    depends_on:
      - db
    environment:
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_KEY: ${APP_KEY:-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX}
      APP_ENV: ${APP_ENV:-local}
      APP_URL: ${APP_URL:-http://localhost}
      LOG_CHANNEL: ${LOG_CHANNEL:-stderr}
      LOG_STDERR_FORMATTER: ${LOG_STDERR_FORMATTER:-Monolog\Formatter\JsonFormatter}
      DB_CONNECTION: ${DB_CONNECTION:-mysql}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE:-laravel}
      DB_USERNAME: ${DB_USERNAME:-phper}
      DB_PASSWORD: ${DB_PASSWORD:-secret}

  nginx:
    container_name: test-project-nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: unless-stopped
    ports:
      - target: 80
        published: ${WEB_PUBLISHED_PORT:-80}
        protocol: tcp
        mode: host
    volumes:
      - type: bind
        source: .
        target: /var/www/html

  db:
    container_name: test-project-mysql
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    ports:
      - target: 3306
        published: ${DB_PUBLISHED_PORT:-3306}
        protocol: tcp
        mode: host
    restart: unless-stopped
    volumes:
      - ./docker/mysql/db-store:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-phper}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}

  node:
    container_name: test-project-node
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    volumes:
      - type: bind
        source: .
        target: /var/www/html
    tty: true
